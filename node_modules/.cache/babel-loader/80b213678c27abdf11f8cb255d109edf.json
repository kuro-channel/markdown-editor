{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\markdown-editor\\\\markdown-editor\\\\src\\\\pages\\\\editor.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styled from 'styled-components';\nimport { useStateWithStorage } from '../hooks/use_state_with_storage';\nimport { putMemo } from '../indexeddb/memos';\nimport { Button } from '../components/button';\nimport { SaveModal } from '../components/save_modal';\nimport { Link } from 'react-router-dom';\nimport { Header } from '../components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useState\n} = React;\nconst Wrapper = styled.header`\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 3rem;\n`;\n_c = Wrapper;\nconst HeaderArea = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0;\n  left: 0;\n`;\n_c2 = HeaderArea;\nconst TextArea = styled.textarea`\n  border-right: 1px solid silver;\n  border-top: 1px solid silver;\n  bottom: 0;\n  font-size: 1rem;\n  left: 0;\n  padding: 0.5rem;\n  position: absolute;\n  top: 0;\n  width: 50vw;\n`;\n_c3 = TextArea;\nconst Preview = styled.div`\n  border-top: 1px solid silver;\n  bottom: 0;\n  overflow-y: scroll;\n  padding: 1rem;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 50vw;\n`;\n_c4 = Preview;\nconst StorageKey = 'pages/editor:text';\nexport const Editor = () => {\n  _s();\n\n  const [text, setText] = useStateWithStorage('', StorageKey);\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderArea, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: \"Markdown Editor\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowModal(true),\n          children: \"\\u4FDD\\u5B58\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/history\",\n          children: \"\\u5C65\\u6B74\\u3092\\u898B\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        onChange: event => {\n          setText(event.target.value);\n        },\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          source: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(SaveModal, {\n      onSave: title => {\n        putMemo(title, text);\n        setShowModal(false);\n      },\n      onCancel: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Editor, \"3ZHLhWTHYDSV7rLxXrYBwRw3G8w=\", false, function () {\n  return [useStateWithStorage];\n});\n\n_c5 = Editor;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"HeaderArea\");\n$RefreshReg$(_c3, \"TextArea\");\n$RefreshReg$(_c4, \"Preview\");\n$RefreshReg$(_c5, \"Editor\");","map":{"version":3,"sources":["C:/react/markdown-editor/markdown-editor/src/pages/editor.tsx"],"names":["React","ReactMarkdown","styled","useStateWithStorage","putMemo","Button","SaveModal","Link","Header","useState","Wrapper","header","HeaderArea","div","TextArea","textarea","Preview","StorageKey","Editor","text","setText","showModal","setShowModal","event","target","value","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeT,KAArB;AAEA,MAAMU,OAAO,GAAGR,MAAM,CAACS,MAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,O;AAQN,MAAME,UAAU,GAAGV,MAAM,CAACW,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;MAAMD,U;AAON,MAAME,QAAQ,GAAGZ,MAAM,CAACa,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,Q;AAYN,MAAME,OAAO,GAAGd,MAAM,CAACW,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMG,O;AAWN,MAAMC,UAAU,GAAG,mBAAnB;AAEA,OAAO,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,mBAAmB,CAAC,EAAD,EAAKc,UAAL,CAA3C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMa,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,OAAD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAGC,KAAD,IAAW;AAC7BH,UAAAA,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,SAFD;AAEG,QAAA,KAAK,EAAEN;AAFV;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAmBGE,SAAS,iBACR,QAAC,SAAD;AACE,MAAA,MAAM,EAAGK,KAAD,IAAyB;AAC/BtB,QAAAA,OAAO,CAACsB,KAAD,EAAQP,IAAR,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJH;AAKE,MAAA,QAAQ,EAAE,MAAMA,YAAY,CAAC,KAAD;AAL9B;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA,kBADF;AA+BD,CAnCM;;GAAMJ,M;UACaf,mB;;;MADbe,M","sourcesContent":["import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport styled from 'styled-components';\r\nimport { useStateWithStorage } from '../hooks/use_state_with_storage';\r\nimport { putMemo } from '../indexeddb/memos';\r\nimport { Button } from '../components/button';\r\nimport { SaveModal } from '../components/save_modal';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from '../components/header';\r\n\r\nconst { useState } = React;\r\n\r\nconst Wrapper = styled.header`\r\n  bottom: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 3rem;\r\n`\r\n\r\nconst HeaderArea = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  left: 0;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  border-right: 1px solid silver;\r\n  border-top: 1px solid silver;\r\n  bottom: 0;\r\n  font-size: 1rem;\r\n  left: 0;\r\n  padding: 0.5rem;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 50vw;\r\n`\r\n\r\nconst Preview = styled.div`\r\n  border-top: 1px solid silver;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n  padding: 1rem;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  width: 50vw;\r\n`\r\n\r\nconst StorageKey = 'pages/editor:text'\r\n\r\nexport const Editor: React.FC = () => {\r\n  const [text, setText] = useStateWithStorage('', StorageKey);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <HeaderArea>\r\n        <Header title=\"Markdown Editor\">\r\n          <Button onClick={() => setShowModal(true)}>\r\n            保存する\r\n            </Button>\r\n          <Link to=\"/history\">\r\n            履歴を見る\r\n          </Link>\r\n        </Header>\r\n      </HeaderArea>\r\n      <Wrapper>\r\n        <TextArea onChange={(event) => {\r\n          setText(event.target.value)\r\n        }} value={text} />\r\n        <Preview>\r\n          <ReactMarkdown source={text} />\r\n        </Preview>\r\n      </Wrapper>\r\n      {showModal && (\r\n        <SaveModal\r\n          onSave={(title: string): void => {\r\n            putMemo(title, text)\r\n            setShowModal(false)\r\n          }}\r\n          onCancel={() => setShowModal(false)}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}